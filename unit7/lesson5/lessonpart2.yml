id: lessonpart2
title: Lesson
content: |-
  ## Activities

- Lesson: Arbitrary Number of Arguments


  ## Using \*args and \*\*kwargs


  Use `*args` for arbitrary positional arguments and `**kwargs` for arbitrary
  keyword arguments.


  ## Explicit Examples


  ## Example 6.5.1: Using \*args for Multiple Toppings


  ```python

  def make_pizza(size, *toppings):
     print(f"
- Making a {size}-inch pizza with the following toppings:")
     for topping in toppings:
         print(f"- {topping}")

  make_pizza(12, 'pepperoni')

  make_pizza(16, 'mushrooms', 'green peppers', 'extra cheese')

  ```


  Expected Output:


  ```

  Making a 12-inch pizza with the following toppings:

  - pepperoni


  Making a 16-inch pizza with the following toppings:

  - mushrooms

  - green peppers

  - extra cheese

  ```


  ## Example 6.5.2: Using \*\*kwargs for User Profile Details


  ```python

  def build_profile(first, last, **user_info):
     user_info['first_name'] = first
     user_info['last_name'] = last
     return user_info

  user_profile = build_profile('albert', 'einstein',
                             location='princeton',
                             field='physics')
  print("
- User Profile 1:", user_profile)


  user_profile2 = build_profile('marie', 'curie',
                             city='warsaw',
                             occupation='scientist',
                             born_year=1867)
  print("
- User Profile 2:", user_profile2)

  ```


  Expected Output:


  ```

  User Profile 1: {'location': 'princeton', 'field': 'physics', 'first_name':
  'albert', 'last_name': 'einstein'}


  User Profile 2: {'city': 'warsaw', 'occupation': 'scientist', 'born_year':
  1867, 'first_name': 'marie', 'last_name': 'curie'}

  ```


  ## Activities


  1. **Activity 6.5.1: Car Information**


  * Create `car_info.py`.


  * Write `make_car(manufacturer, model_name, **kwargs)`.


  * Return a dictionary.


  * Call and print results.


  1. **Activity 6.5.2: User Permissions**


  * Create `user_permissions.py`.


  * Define `assign_roles(username, *roles)`.


  * Print assigned roles for each user.

"showEditor": !!bool |-
  true
"editors":
- |-
  course1/unit7/lesson5/lessonpart2/Lesson6_5.py
