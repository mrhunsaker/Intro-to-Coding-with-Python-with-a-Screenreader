# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart2
title: Lesson
content: >+
  # Lesson: Variables and Simple Data Types


  ## Introducing strings and numbers. Using variables to store data. Basic
  arithmetic operations.


  A variable is a labeled container for information. Data types categorize the
  kind of information a variable holds.


  ## Explicit Examples


  ## Example 1.3.1: Storing and Printing a String


  ```python

  # Store a name in a variable and print it.

  student_name = "Charlie"

  print("Hello, " + student_name + "!")

  ```


  Expected Output:


  ```

  Hello, Charlie!

  ```


  ## Example 1.3.2: Storing and Printing Numbers


  ```python

  # Store numbers and perform basic arithmetic.

  apple_count = 5

  orange_count = 3

  total_fruit = apple_count + orange_count

  print("You have", total_fruit, "fruits in total.")


  price_per_item = 2.50

  quantity = 4

  total_cost = price_per_item * quantity

  print("The total cost is:", total_cost)

  ```


  Expected Output:


  ```

  You have 8 fruits in total.

  The total cost is: 10.0

  ```


  ## Activities


  1. **Activity 1.3.1: Personal Information Variables**

     1. Create `my_info.py`.
     2. Create variables for:

        * First name (string)

        * Favorite number (integer)

        * Height in meters (float)

        * Preference for pizza (string)
     3. Print each with a label.

        ```python
        my_name = "Jamie"
        print("My name is:", my_name)
        # Add other variables and print statements here
        ```
     4. Save and run.

  2. **Activity 1.3.2: Simple Math Challenge**

     1. Create `math_challenge.py`.
     2. Choose two numbers, e.g., `num1 = 15`, `num2 = 7`.
     3. Calculate sum, difference, product, quotient.

        ```python
        num1 = 15
        num2 = 7
        sum_result = num1 + num2
        print("Sum:", sum_result)
        # Add difference, product, and quotient calculations and print statements
        ```
     4. Save and run.

  ## Key Table: Unit 1: Key Python Data Types and Operations


  | Data Type              | Description            | Example Value     | Common
  Operations                  |

  | ---------------------- | ---------------------- | ----------------- |
  ---------------------------------- |

  | str (String)           | Text, words, sentences | "Hello", "Python" | +
  (concatenation), len(), .upper() |

  | int (Integer)          | Whole numbers          | 10, -5, 0         | +, -,
  \*, /, %                     |

  | float (Floating-point) | Numbers with decimals  | 3.14, 9.99, 0.0   | +, -,
  \*, /                        |

editors:
  - course1/unit2/lesson3/lessonpart2/lesson1_3.py
questionGroups:
  - id: "1"
    questions:
      - id: "1"
        type: multiple
        content: |-
          What is the expected output of the following Python code snippet?

          ```python
          fruit1 = 6
          fruit2 = 4
          total_fruits = fruit1 + fruit2
          print('Total fruits:', total_fruits)
          ```
        options:
          - id: "1"
            value: "Total fruits: 10"
            explanation: The code adds the values of fruit1 and fruit2, resulting in 10.
            isCorrect: true
          - id: "2"
            value: "Total fruits: 64"
            explanation: The numbers are added, not concatenated as strings.
          - id: "3"
            value: "Total fruits: 24"
            explanation: The sum of 6 and 4 is 10, not 24.
          - id: "4"
            value: "Total fruits: 0"
            explanation: The sum of fruit1 and fruit2 is not zero.
  - id: "2"
    questions:
      - id: "1"
        type: multiple
        content: |-
          What is the result of the following Python code snippet?

          ```python
          num1 = 10
          num2 = 5
          result = num1 * num2
          print('The result is:', result)
          ```
        options:
          - id: "1"
            value: "The result is: 50"
            explanation: The multiplication of 10 and 5 results in 50.
            isCorrect: true
          - id: "2"
            value: "The result is: 15"
            explanation: This would be the result of addition, not multiplication.
          - id: "3"
            value: "The result is: 5"
            explanation: This would be the result of division, not multiplication.
          - id: "4"
            value: "The result is: 2"
            explanation: This is incorrect; it does not relate to the given operation.
  - id: "3"
    questions:
      - id: "1"
        type: reflection
        content: Reflect on how using variables can help organize and simplify your code
          when performing arithmetic operations. How might this approach be
          beneficial when working with larger programs or datasets?
