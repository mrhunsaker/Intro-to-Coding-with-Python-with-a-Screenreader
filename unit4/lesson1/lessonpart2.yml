# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart2
title: Lesson
content: >
  
  # Lesson: Boolean Expressions and if Statements



  ## Introducing True/False and comparison operators. Making decisions in

  programs.



  Boolean expressions are statements that evaluate to either True or False.

  These expressions are formed using comparison operators, which are used to

  compare values. Common comparison operators include `==` (equal to), `!=` (not

  equal to), `<` (less than), `>` (greater than), `<=` (less than or equal to),

  and `>=` (greater than or equal to). `if` statements enable a program to

  execute different blocks of code based on whether a given condition is True or

  False. Indentation is critically important in Python, as it defines the code

  block that belongs to the if statement.



  ## Explicit Examples



  ## Example 3.1.1: Simple Age Check



  ```python


  age = 15


  if age >= 18:
      print("You are old enough to vote.")
  print("Program finished.") # This line runs regardless of the if condition


  ```



  Expected Output:



  ```


  Program finished.


  ```



  ## Example 3.1.2: Password Length Check



  ```python


  password = "mysecret"


  if len(password) < 8:
      print("Weak password: Password must be at least 8 characters long.")
  if password == "password123":
      print("Weak password: Do not use common passwords.")
  ```



  Expected Output:



  ```


  Weak password: Password must be at least 8 characters long.


  ```



  ## Activities



  1. **Activity 3.1.1: Number Comparison Game**

     1. Create `compare_numbers.py`.
     2. Prompt the user to enter two numbers.
     3. Using if statements and comparison operators, print a message indicating:

        * If the first number is greater than the second.

        * If the two numbers are equal.

        * If the first number is less than the second.
     4. Run the program multiple times with various pairs of numbers.

     * Purpose: Practice with if statements and comparison operators using user input.

  2. **Activity 3.1.2: Password Strength Checker (Basic)**

     1. Create `password_checker.py`.
     2. Prompt the user to enter a password.
     3. Use an if statement to check if the password's length is 8 or more characters.
     4. If the condition is met, print "Strong password!". Otherwise, print "Weak password: Must be at least 8 characters."

     * Purpose: Apply if statements to a practical scenario.

  ## Key Table: Unit 3: Common Comparison Operators



  | Operator | Meaning               | Example | Result (if True) |


  | -------  - | --------------------  - | ------  - | ---------------  - |


  | ==       | Equal to              | 5 == 5  | True             |


  | !=       | Not equal to          | 5 != 10 | True             |


  | <        | Less than             | 5 < 10  | True             |


  | >        | Greater than          | 10 > 5  | True             |


  | <=       | Less than or equal to | 5 <= 5  | True             |


  | >=       | Greater than or equal | 10 >= 5 | True             |
showEditor: true
editors:
  - course1/unit4/lesson1/lessonpart2/Lesson3_1.py
