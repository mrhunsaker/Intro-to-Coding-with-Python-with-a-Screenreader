# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart2
title: Lesson
content: >+
  # Lesson: Chained Conditionals (elif, else)


  ## Handling multiple conditions.


  The `else` statement provides an alternative block of code to execute if the
  initial `if` condition evaluates to False. The `elif` (short for "else if")
  statement allows for checking multiple conditions in sequence. Only one code
  block—the first one whose condition evaluates to True—will be executed.


  ## Explicit Examples


  ## Example 3.2.1: Simple Grade Checker


  ```python

  score = 85

  if score >= 90:
      print("Grade: A")
  elif score >= 80:
      print("Grade: B")
  else:
      print("Grade: C or lower")
  ```


  Expected Output:


  ```

  Grade: B

  ```


  ## Example 3.2.2: Stages of Life


  ```python

  age = 25

  if age < 2:
      print("You are a baby.")
  elif age < 4:
      print("You are a toddler.")
  elif age < 13:
      print("You are a kid.")
  elif age < 20:
      print("You are a teenager.")
  else:
      print("You are an adult.")
  ```


  Expected Output:


  ```

  You are an adult.

  ```


  ## Activities


  1. **Activity 3.2.1: Movie Ticket Pricing**

     1. Create `movie_tickets.py`.
     2. Prompt the user to enter their age.
     3. Implement ticket pricing rules using if-elif-else:

        * Age 0-5: Free

        * Age 6-12: $7

        * Age 13-64: $12

        * Age 65+: $5
     4. Print the calculated ticket price.

     * Purpose: Practice with chained conditionals.

  2. **Activity 3.2.2: Favorite Fruit Checker**

     1. Create `fruit_checker.py`.
     2. Prompt the user to enter their favorite fruit.
     3. Use if-elif-else to provide a specific response:

        * If "apple": print "Apples are crisp and delicious!"

        * If "banana": print "Bananas are great for smoothies!"

        * If "orange": print "Oranges are full of Vitamin C!"

        * Otherwise: print "That's an interesting choice!"
     4. Handle case sensitivity using `.lower()`.

     * Purpose: Practice chained conditionals and string methods.


showEditor: true
editors:
  - course1/unit4/lesson2/lessonpart2/Lesson3_2.py
