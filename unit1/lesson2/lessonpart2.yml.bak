# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart2
title: Lesson
content: >+
  # Lesson 0.2: Configuring Your Screen Reader for VS Code




  VS Code is highly accessible, but knowing specific screen reader commands and
  configuration tips will make a huge difference.


  A. General Screen Reader Tips for VS Code:


  1\. Use Screen Reader Mode:


  ◦ VS Code Command: Press Ctrl + Shift + P to open the Command Palette. Type
  "Toggle Screen Reader Optimized" and press Enter.


  ◦ What it does: This mode optimizes VS Code's UI for screen readers, disabling
  features that might interfere and enabling others that help. It should be on
  by default if a screen reader is detected. You can toggle it off and on to
  hear the difference.


  2\. Accessible View:


  ◦ VS Code Command: Press Shift + Alt + F2 (Windows/Linux) or Shift + Option +
  F2 (macOS).


  ◦ What it does: This opens a special pane that provides a flat, text-based
  representation of content that might otherwise be difficult for a screen
  reader to access (e.g., hover tooltips, complex UI elements, certain error
  messages). Use Esc to close it.


  3\. Keyboard-First Navigation:


  ◦ VS Code is designed for keyboard navigation. Always prioritize keyboard
  shortcuts over mouse.


  ◦ Tab and Shift+Tab: Use these to move focus between UI elements (sidebar,
  editor, panel, status bar).


  ◦ Arrow Keys: Use within active panes (e.g., moving line by line in the
  editor, item by item in a list).


  4\. Listen to Status Bar: The status bar (at the very bottom of the VS Code
  window) provides crucial information: current line/column number, file type,
  active Python environment, error/warning counts. Learn to navigate to it
  (often Ctrl+1 or by tabbing from the editor) and quickly scan its contents.


  B. Screen Reader Specific Settings for Indentation:


  Python relies heavily on indentation. Your screen reader needs to clearly
  announce changes in indentation.


  1\. NVDA (Windows):


  ◦ Open NVDA Menu: Press NVDA Key + N.


  ◦ Preferences > Settings: Activate this.


  ◦ Document Formatting: In the settings dialog, find and activate "Document
  Formatting" (you might type D to jump to it).


  ◦ Indentation Reporting: Locate "Indentation" and set it to "Say all" or
  "Beeps". "Say all" is generally recommended as it announces the exact number
  of spaces/tabs.


  ◦ Save: Activate "OK".


  ◦ Verify: Open a Python file, create an indented block (like an if statement
  or a loop), and use arrow keys to move between indented and unindented lines.
  Listen for the indentation announcement.


  2\. JAWS (Windows):


  ◦ Open JAWS Options: Press JAWS Key + J, then Alt+O for Options, then B for
  Basics.


  ◦ Text Processing: Find "Text Processing" or similar.


  ◦ Indentation Options: Look for options related to "Indent Detection" or
  "Announce Indents". Configure it to your preference (e.g., announce number of
  spaces).


  ◦ Save: Activate "OK".


  3\. VoiceOver (macOS):


  ◦ VoiceOver generally handles indentation well by default, often announcing "4
  spaces" or "tab" as you navigate.


  ◦ VoiceOver Utility: You can fine-tune in VoiceOver Utility (Command + F5 to
  open, then VoiceOver Utility). Check "Verbosity" and "Text" settings, ensuring
  "Speak characters by type" or similar options are enabled.VS Code is highly
  accessible, but knowing specific screen reader commands and configuration tips
  will make a huge difference.


  A. General Screen Reader Tips for VS Code:


  1\. Use Screen Reader Mode:


  ◦ VS Code Command: Press Ctrl + Shift + P to open the Command Palette. Type
  "Toggle Screen Reader Optimized" and press Enter.


  ◦ What it does: This mode optimizes VS Code's UI for screen readers, disabling
  features that might interfere and enabling others that help. It should be on
  by default if a screen reader is detected. You can toggle it off and on to
  hear the difference.


  2\. Accessible View:


  ◦ VS Code Command: Press Shift + Alt + F2 (Windows/Linux) or Shift + Option +
  F2 (macOS).


  ◦ What it does: This opens a special pane that provides a flat, text-based
  representation of content that might otherwise be difficult for a screen
  reader to access (e.g., hover tooltips, complex UI elements, certain error
  messages). Use Esc to close it.


  3\. Keyboard-First Navigation:


  ◦ VS Code is designed for keyboard navigation. Always prioritize keyboard
  shortcuts over mouse.


  ◦ Tab and Shift+Tab: Use these to move focus between UI elements (sidebar,
  editor, panel, status bar).


  ◦ Arrow Keys: Use within active panes (e.g., moving line by line in the
  editor, item by item in a list).


  4\. Listen to Status Bar: The status bar (at the very bottom of the VS Code
  window) provides crucial information: current line/column number, file type,
  active Python environment, error/warning counts. Learn to navigate to it
  (often Ctrl+1 or by tabbing from the editor) and quickly scan its contents.


  B. Screen Reader Specific Settings for Indentation:


  Python relies heavily on indentation. Your screen reader needs to clearly
  announce changes in indentation.


  1\. NVDA (Windows):


  ◦ Open NVDA Menu: Press NVDA Key + N.


  ◦ Preferences > Settings: Activate this.


  ◦ Document Formatting: In the settings dialog, find and activate "Document
  Formatting" (you might type D to jump to it).


  ◦ Indentation Reporting: Locate "Indentation" and set it to "Say all" or
  "Beeps". "Say all" is generally recommended as it announces the exact number
  of spaces/tabs.


  ◦ Save: Activate "OK".


  ◦ Verify: Open a Python file, create an indented block (like an if statement
  or a loop), and use arrow keys to move between indented and unindented lines.
  Listen for the indentation announcement.


  2\. JAWS (Windows):


  ◦ Open JAWS Options: Press JAWS Key + J, then Alt+O for Options, then B for
  Basics.


  ◦ Text Processing: Find "Text Processing" or similar.


  ◦ Indentation Options: Look for options related to "Indent Detection" or
  "Announce Indents". Configure it to your preference (e.g., announce number of
  spaces).


  ◦ Save: Activate "OK".


  3\. VoiceOver (macOS):


  ◦ VoiceOver generally handles indentation well by default, often announcing "4
  spaces" or "tab" as you navigate.


  ◦ VoiceOver Utility: You can fine-tune in VoiceOver Utility (Command + F5 to
  open, then VoiceOver Utility). Check "Verbosity" and "Text" settings, ensuring
  "Speak characters by type" or similar options are enabled.


showEditor: true
editors:
  - course1/unit1/lesson2/lessonpart2/Lesson0_2.py
